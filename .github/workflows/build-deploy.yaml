name: Build and Deploy

on: [push, pull_request]
jobs:
  build:
    environment:
      name: testing
    env:
      DB_HOSTNAME: ${{secrets.DB_HOSTNAME}}
      DB_PORT: ${{secrets.DB_PORT}}
      DB_PASSWORD: ${{secrets.DB_PASSWORD}}
      DB_NAME: ${{secrets.DB_NAME}}
      DB_USERNAME: ${{secrets.DB_USERNAME}}
      SECRET_KEY: ${{secrets.SECRET_KEY}}
      ALGORITHM: ${{secrets.ALGORITHM}}
      ACCESS_TOKEN_EXPIRY_MINUTES: ${{secrets.ACCESS_TOKEN_EXPIRY_MINUTES}}
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:16.1-alpine3.19
        env:
          POSTGRES_PASSWORD: ${{secrets.DB_PASSWORD}}
          POSTGRES_DB: ${{secrets.DB_NAME}}_test_db
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - name: pulling git repo
        uses: actions/checkout@v4
      - name: Install python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"
      - name: update pip
        run: python -m pip install --upgrade pip
      - name: install dependencies
        run: pip install -r requirements.txt
      - name: test with pytest
        run: |
          pip install pytest
          pytest
      # - name: Log in to Docker Hub
      #   uses: docker/login-action@v3
      #   with:
      #     username: ${{secrets.DOCKER_HUB_USERNAME}}
      #     password: ${{secrets.DOCKER_HUB_ACCESS_TOKEN}}
      # - name: Set up Docker Buildx
      #   uses: docker/setup-buildx-action@v3
      # - name: Build and push
      #   uses: docker/build-push-action@v5
      #   with:
      #     context: .
      #     file: ./Dockerfile
      #     push: true
      #     tags: ${{ secrets.DOCKER_HUB_USERNAME }}/fastapi_course:latest
  deploy:
    runs-on: ubuntu-latest
    needs: [build]

    steps:
      - name: deopy to ubuntu server
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{secrets.SERVER_HOST}}
          username: ${{secrets.SERVER_USERNAME}}
          password: ${{secrets.SERVER_PASSWORD}}
          script: |
            cd app/code
            git pull
            echo ${{secrets.SERVER_PASSWORD}} | sudo -S systemctl restart api